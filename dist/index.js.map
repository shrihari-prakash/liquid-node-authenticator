{"version":3,"file":"index.js","sources":["../lib/errors.js","../lib/cache.js","../lib/logger.js","../lib/scope-manager.js","../lib/index.js"],"sourcesContent":["/**\r\n * Custom error class representing a Forbidden error (HTTP 403).\r\n *\r\n * @class ForbiddenError\r\n * @extends {Error}\r\n */\r\nclass ForbiddenError extends Error {\r\n  /**\r\n     * Creates an instance of ForbiddenError.\r\n     *\r\n     * @constructor\r\n     * @param {string} [message] - Optional error message.\r\n     */\r\n  constructor (message) {\r\n    super(message)\r\n    this.code = 403\r\n    this.name = 'ForbiddenError'\r\n  }\r\n}\r\n\r\n/**\r\n * Custom error class representing an Unauthorized error (HTTP 401).\r\n *\r\n * @class UnauthorizedError\r\n * @extends {Error}\r\n */\r\nclass UnauthorizedError extends Error {\r\n  /**\r\n     * Creates an instance of UnauthorizedError.\r\n     *\r\n     * @constructor\r\n     * @param {string} [message] - Optional error message.\r\n     */\r\n  constructor (message) {\r\n    super(message)\r\n    this.code = 401\r\n    this.name = 'UnauthorizedError'\r\n  }\r\n}\r\n\r\n/**\r\n * Custom error class representing a Network error (HTTP 503).\r\n *\r\n * @class NetworkError\r\n * @extends {Error}\r\n */\r\nclass NetworkError extends Error {\r\n  /**\r\n     * Creates an instance of NetworkError.\r\n     *\r\n     * @constructor\r\n     * @param {string} [message] - Optional error message.\r\n     */\r\n  constructor (message) {\r\n    super(message)\r\n    this.code = 503\r\n    this.name = 'NetworkError'\r\n  }\r\n}\r\n\r\n/**\r\n * Custom error class for creating specific errors with a custom name and code.\r\n *\r\n * @class CustomError\r\n * @extends {Error}\r\n */\r\nclass CustomError extends Error {\r\n  /**\r\n     * Creates an instance of CustomError.\r\n     *\r\n     * @constructor\r\n     * @param {string} name - The custom name of the error.\r\n     * @param {number} code - The custom error code.\r\n     * @param {string} [message] - Optional error message.\r\n     */\r\n  constructor (name, code, message) {\r\n    super(message)\r\n    this.code = code\r\n    this.name = name\r\n  }\r\n}\r\n\r\n/**\r\n * Checks if the provided error is an instance of any Liquid errors.\r\n *\r\n * @function\r\n * @param {Error} error - The error object to check.\r\n * @returns {boolean} True if the error is a ForbiddenError, UnauthorizedError, or NetworkError; otherwise, false.\r\n */\r\nfunction isLiquidError (error) {\r\n  return error instanceof ForbiddenError || error instanceof UnauthorizedError || error instanceof NetworkError\r\n}\r\n\r\nexport { ForbiddenError, UnauthorizedError, NetworkError, CustomError, isLiquidError }\r\n","const FIVE_MINUTES = 300\r\n\r\n/**\r\n * Cache class for storing and retrieving data with an external redis instance.\r\n *\r\n * @class\r\n */\r\nclass Cache {\r\n  /**\r\n     * Creates an instance of the Cache class.\r\n     *\r\n     * @constructor\r\n     * @param {Object} [cacheOptions] - Options for configuring the cache.\r\n     * @param {Object} [cacheOptions.client] - The caching client (e.g., Redis client) to use.\r\n     * @param {number} [cacheOptions.expire] - The expiration time for cached items in seconds.\r\n     */\r\n  constructor (cacheOptions) {\r\n    if (cacheOptions) {\r\n      this.cachePrefix = 'liquid_node_connector:'\r\n      this.cacheClient = cacheOptions.client\r\n      this.cacheExpiry = cacheOptions.expire || FIVE_MINUTES\r\n    }\r\n  }\r\n\r\n  /**\r\n     * Retrieves data from the cache using the specified key.\r\n     *\r\n     * @async\r\n     * @param {string} key - The key used to retrieve data from the cache.\r\n     * @returns {Promise<Object|null>} The cached data, or null if the cache is not configured.\r\n     */\r\n  async get (key) {\r\n    if (!this.cacheClient) {\r\n      return null\r\n    }\r\n    const cacheResult = await this.cacheClient.get(`${this.cachePrefix}${key}`)\r\n    if (cacheResult) {\r\n      return JSON.parse(cacheResult)\r\n    }\r\n  }\r\n\r\n  /**\r\n     * Stores data in the cache with the specified key.\r\n     *\r\n     * @async\r\n     * @param {string} key - The key used to store data in the cache.\r\n     * @param {Object} data - The JSON data to be stored in the cache.\r\n     * @returns {Promise<undefined>} A Promise indicating the completion of the set operation.\r\n     */\r\n  async set (key, data) {\r\n    if (!this.cacheClient) {\r\n      return\r\n    }\r\n    return await this.cacheClient.set(`${this.cachePrefix}${key}`, JSON.stringify(data), 'EX', this.cacheExpiry)\r\n  }\r\n}\r\n\r\nexport default Cache\n","/**\r\n * Logger class for handling logging in the Liquid Node Connector.\r\n *\r\n * @class\r\n */\r\nclass Logger {\r\n  /**\r\n     * Creates an instance of the Logger class.\r\n     *\r\n     * @constructor\r\n     * @param {boolean} [debugging=true] - A flag indicating whether debugging is enabled.\r\n     */\r\n  constructor (debugging = true) {\r\n    /**\r\n         * A flag indicating whether debugging is enabled.\r\n         * @type {boolean}\r\n         * @private\r\n         */\r\n    this.debugging = debugging\r\n\r\n    /**\r\n         * The prefix to be added to log messages.\r\n         * @type {string}\r\n         * @private\r\n         */\r\n    this.prefix = '[Liquid Node Connector]'\r\n  }\r\n\r\n  /**\r\n     * Logs messages to the console with the \"debug\" level.\r\n     *\r\n     * @param {...*} args - The messages or values to be logged.\r\n     */\r\n  debug () {\r\n    if (!this.debugging) {\r\n      return\r\n    }\r\n    const args = Array.from(arguments)\r\n    args.unshift(this.prefix)\r\n    console.log.apply(console, args)\r\n  }\r\n\r\n  /**\r\n     * Logs messages to the console with the \"info\" level.\r\n     *\r\n     * @param {...*} args - The messages or values to be logged.\r\n     */\r\n  info () {\r\n    if (!this.debugging) {\r\n      return\r\n    }\r\n    const args = Array.from(arguments)\r\n    args.unshift(this.prefix)\r\n    console.log.apply(console, args)\r\n  }\r\n\r\n  /**\r\n     * Logs warning messages to the console with the \"warn\" level.\r\n     *\r\n     * @param {...*} args - The warning messages or values to be logged.\r\n     */\r\n  warn () {\r\n    if (!this.debugging) {\r\n      return\r\n    }\r\n    const args = Array.from(arguments)\r\n    args.unshift(this.prefix)\r\n    console.warn.apply(console, args)\r\n  }\r\n\r\n  /**\r\n    * Logs error messages to the console with the \"error\" level.\r\n    *\r\n    * @param {...*} args - The error messages or values to be logged.\r\n    */\r\n  error () {\r\n    if (!this.debugging) {\r\n      return\r\n    }\r\n    const args = Array.from(arguments)\r\n    args.unshift(this.prefix)\r\n    console.error.apply(console, args)\r\n  }\r\n}\r\n\r\nexport default Logger\r\n","import { Circuit, Retry, RetryMode } from 'mollitia'\r\n\r\n/**\r\n * @typedef {Object} Scope\r\n * @property {string} name - The name of the scope.\r\n * @property {string} description - The description of the scope.\r\n * @property {string} [parent] - The parent scope's name.\r\n */\r\n\r\n/**\r\n * Manages scopes and provides methods for checking if a scope is allowed.\r\n *\r\n * @class\r\n */\r\nclass ScopeManager {\r\n  /**\r\n     * Creates an instance of the ScopeManager class.\r\n     *\r\n     * @constructor\r\n     * @param {string} host - The base URL where the scopes can be fetched.\r\n     */\r\n  constructor (host, logger) {\r\n    /**\r\n         * The base URL where the scopes can be fetched.\r\n         * @type {string}\r\n         * @private\r\n         */\r\n    this.host = host\r\n\r\n    /**\r\n         * The loaded scopes.\r\n         * @type {Object}\r\n         * @private\r\n         */\r\n    this.scopes = {}\r\n\r\n    /**\r\n         * The logger.\r\n         * @type {Object}\r\n         * @private\r\n         */\r\n    this.logger = logger\r\n\r\n    this.logger.debug('Initializing scope manager with host: ' + this.host)\r\n\r\n    const circuit = new Circuit({\r\n      options: {\r\n        modules: [\r\n          new Retry({\r\n            attempts: 8,\r\n            interval: 500,\r\n            mode: RetryMode.LINEAR,\r\n            factor: 2,\r\n            onRejection: () => true\r\n          })\r\n        ]\r\n      }\r\n    })\r\n    circuit.fn(this.initializeScopes.bind(this)).execute()\r\n  }\r\n\r\n  /**\r\n     * Recursively generates a tree structure of scopes.\r\n     *\r\n     * @param {Scope[]} scopes - The array of scopes to process.\r\n     * @param {string|null|undefined} [root=null] - The root scope's name.\r\n     * @returns {Object} The tree structure of scopes.\r\n     * @private\r\n     */\r\n  getScopeTree (scopes, root = null) {\r\n    return Object.fromEntries(\r\n      scopes\r\n        .filter((scope) => scope.parent === root)\r\n        .map((s) => [s.name, this.getScopeTree(scopes, s.name)])\r\n    )\r\n  }\r\n\r\n  /**\r\n     * Initializes scopes by fetching them from the server.\r\n     *\r\n     * @private\r\n     */\r\n  async initializeScopes () {\r\n    try {\r\n      const response = await fetch(`${this.host}/user/scopes`)\r\n      if (!response.ok) {\r\n        throw new Error(`Failed to fetch scopes. Status: ${response.status}`)\r\n      }\r\n      this.scopes = (await response.json()).data.scopes\r\n      this.logger.error('Scopes initialized.')\r\n    } catch (error) {\r\n      this.logger.error('Error initializing scopes:', error.message)\r\n      throw error\r\n    }\r\n  }\r\n\r\n  /**\r\n     * Gets all the loaded scopes.\r\n     *\r\n     * @returns {Object} The loaded scopes.\r\n     */\r\n  getScopes () {\r\n    return this.scopes\r\n  }\r\n\r\n  /**\r\n     * Checks if a given scope is allowed based on the user's allowed scopes.\r\n     *\r\n     * @param {string} scope - The scope to check.\r\n     * @param {Object} token - The token object.\r\n     * @returns {boolean} True if the scope is allowed, false otherwise.\r\n     */\r\n  checkTokenScope (scope, token = { scope: [] }) {\r\n    if (!this.scopes) {\r\n      this.logger.warn('Scope list not ready')\r\n      return false\r\n    }\r\n    const allowedScopes = token.scope\r\n    if (this.isScopeAllowed(scope, allowedScopes)) {\r\n      return true\r\n    } else {\r\n      return false\r\n    }\r\n  }\r\n\r\n  /**\r\n     * Checks if a given scope is allowed based on a list of allowed scopes.\r\n     *\r\n     * @param {string} scope - The scope to check.\r\n     * @param {string[]} [allowedScopes=[]] - The array of allowed scopes.\r\n     * @returns {boolean} True if the scope is allowed, false otherwise.\r\n     */\r\n  isScopeAllowed (scope, allowedScopes = []) {\r\n    const scopeObject = this.scopes[scope]\r\n    if (!scopeObject) {\r\n      this.logger.warn(`Unknown scope ${scope}. Did you forget to configure this scope in your Liquid server?`)\r\n      return false\r\n    }\r\n    if (allowedScopes.includes(scopeObject.name) || allowedScopes.includes(scopeObject.parent)) {\r\n      return true\r\n    } else if (scopeObject.parent) {\r\n      return this.isScopeAllowed(scopeObject.parent, allowedScopes)\r\n    } else {\r\n      return false\r\n    }\r\n  }\r\n}\r\n\r\nexport default ScopeManager\r\n","import { ForbiddenError, UnauthorizedError, NetworkError, CustomError, isLiquidError } from './errors.js'\r\nimport Cache from './cache'\r\nimport Logger from './logger'\r\nimport ScopeManager from './scope-manager.js'\r\n\r\n/**\r\n * LiquidNodeAuthenticator provides methods for authenticating and obtaining access tokens\r\n * from a Liquid OAuth server.\r\n *\r\n * @class\r\n */\r\nclass LiquidNodeAuthenticator {\r\n  accessToken = null\r\n  accessTokenExpiry = new Date(0)\r\n\r\n  /**\r\n     * Creates an instance of LiquidNodeAuthenticator.\r\n     *\r\n     * @constructor\r\n     * @param {Object} options - Configuration options for the LiquidNodeAuthenticator.\r\n     * @param {string} options.host - The base URL of the Liquid OAuth server.\r\n     * @param {string} options.clientId - The client ID for authentication.\r\n     * @param {string} options.clientSecret - The client secret for authentication.\r\n     * @param {(string|string[])} [options.scope=\"*\"] - The OAuth scope(s) for authentication.\r\n     * @param {Object} [options.cacheOptions] - Options for configuring the cache.\r\n     * @param {Object} [options.cacheOptions.client] - The caching client (e.g., Redis client) to use.\r\n     * @param {number} [options.cacheOptions.expire] - The expiration time for cached items in seconds.\r\n     * @param {boolean} [options.debugging] - Specifies if logs should be printed to console.\r\n     */\r\n  constructor ({ host, clientId, clientSecret, scope = '*', cacheOptions, debugging = true }) {\r\n    this.clientId = clientId\r\n    this.clientSecret = clientSecret\r\n    this.scope = scope\r\n    if (Array.isArray(this.scope)) {\r\n      this.scope = this.scope.join(',')\r\n    }\r\n    this.host = host\r\n    this.cache = new Cache(cacheOptions)\r\n    this.logger = new Logger(debugging)\r\n    this.scopeManager = new ScopeManager(this.host, this.logger)\r\n    this.logger.info(\r\n      'Initialized Liquid Node Connector for client ' + clientId\r\n    )\r\n  }\r\n\r\n  /**\r\n    * Authenticates a user using the provided token.\r\n    *\r\n    * @async\r\n    * @param {string} token - The authentication token to be validated.\r\n    * @throws {ForbiddenError} If the token is invalid or unauthorized.\r\n    * @throws {NetworkError} If a network error occurs during the authentication process.\r\n    * @returns {Object} The user's token information if authentication is successful.\r\n    */\r\n  async authenticate (token) {\r\n    try {\r\n      if (!token) { throw new ForbiddenError() }\r\n      const cacheKey = `token:${token}`\r\n      const cacheResult = await this.cache.get(cacheKey)\r\n      if (cacheResult) {\r\n        if (cacheResult.ok === 1) {\r\n          return cacheResult.data.tokenInfo\r\n        } else {\r\n          throw new ForbiddenError()\r\n        }\r\n      }\r\n      const api = `${this.host}/oauth/introspect`\r\n      const headers = {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${(await this.getAccessToken()).accessToken}`\r\n      }\r\n      const body = JSON.stringify({ token })\r\n      let response\r\n      try {\r\n        response = await fetch(api, { method: 'POST', headers, body })\r\n      } catch {\r\n        throw new NetworkError()\r\n      }\r\n      const result = await response.json()\r\n      // No need to await. Cache can always be set again if failed.\r\n      this.cache.set(cacheKey, result)\r\n      this.logger.debug(`Cache written for ${cacheKey}`)\r\n      if (response.status !== 200 || !result.ok) {\r\n        throw new ForbiddenError()\r\n      }\r\n      return result.data.tokenInfo\r\n    } catch (error) {\r\n      this.logger.error(error)\r\n      if (isLiquidError(error)) { throw error }\r\n      throw new CustomError('UnknownError', 500)\r\n    }\r\n  }\r\n\r\n  /**\r\n     * Retrieves an access token, either from memory or by making a request to the Liquid instance.\r\n     *\r\n     * @async\r\n     * @throws {NetworkError} If a network error occurs during the access token retrieval.\r\n     * @throws {UnauthorizedError} If the OAuth server returns an unauthorized status.\r\n     * @returns {Object} The access token and its expiration details.\r\n     */\r\n  async getAccessToken () {\r\n    try {\r\n      const now = new Date()\r\n      if (this.accessTokenExpiry.getTime() <= now.getTime()) {\r\n        const expiry = new Date()\r\n        const api = `${this.host}/oauth/token`\r\n        const headers = {\r\n          'Content-Type': 'application/x-www-form-urlencoded'\r\n        }\r\n        const body = new URLSearchParams()\r\n        body.append('grant_type', 'client_credentials')\r\n        body.append('client_id', this.clientId)\r\n        body.append('client_secret', this.clientSecret)\r\n        body.append('scope', this.scope)\r\n        let response\r\n        try {\r\n          response = await fetch(api, { method: 'POST', headers, body })\r\n        } catch {\r\n          throw new NetworkError()\r\n        }\r\n        if (response.status !== 200) {\r\n          throw new UnauthorizedError()\r\n        }\r\n        const result = await response.json()\r\n        this.accessToken = result.access_token\r\n        expiry.setSeconds(expiry.getSeconds() + result.expires_in)\r\n        this.accessTokenExpiry = expiry\r\n        this.logger.debug('Access token returned from remote.')\r\n      } else {\r\n        this.logger.debug('Access token returned from memory.')\r\n      }\r\n      return {\r\n        accessToken: this.accessToken,\r\n        accessTokenExpiry: this.accessTokenExpiry\r\n      }\r\n    } catch (error) {\r\n      this.logger.error(error)\r\n      if (isLiquidError(error)) { throw error }\r\n      throw new CustomError('UnknownError', 500)\r\n    }\r\n  }\r\n\r\n  /**\r\n     * Checks if a given scope is allowed based on the user's allowed scopes.\r\n     *\r\n     * @param {string} scope - The scope to check.\r\n     * @param {Object} token - The Express response object.\r\n     * @returns {boolean} True if the scope is allowed, false otherwise.\r\n     */\r\n  checkTokenScope (scope, token) {\r\n    return this.scopeManager.checkTokenScope(scope, token)\r\n  }\r\n}\r\n\r\nexport default LiquidNodeAuthenticator\n"],"names":["Circuit","Retry","RetryMode"],"mappings":"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"}